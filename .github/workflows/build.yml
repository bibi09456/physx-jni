# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build

on:
  push:
    branches:
      - "*"
    tags:
      - '!**'
  pull_request:
    branches:
      - "*"
    tags:
      - '!**'

jobs:
  build_linux:
    name: Linux build
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'graalvm'
          java-version: '21'
      - uses: lukka/get-cmake@latest
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build native lib
        run: |
          git submodule update --remote
          ./gradlew buildNativeProject
      - name: Build Android bindings
        run: ./gradlew :physx-jni-android:buildNativeProjectAndroid
      - name: Build and test JNI bindings
        run: ./gradlew build

      - name: Upload native lib artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-libs
          path: |
            physx-jni/build/libs/*.jar
            physx-jni-android/build/outputs/aar/*.aar
            physx-jni-natives-linux/build/libs/*.jar
            physx-jni-natives-linux-cuda/build/libs/*.jar
          compression-level: 9

  build_windows:
    name: Windows build
    runs-on: windows-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build native lib
        run: ./gradlew buildNativeProject
      - name: Build and test JNI bindings
        run: ./gradlew build

      - name: Upload Windows lib artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-libs
          path: |
            physx-jni/build/libs/*.jar
            physx-jni-natives-windows/build/libs/*.jar
            physx-jni-natives-windows-cuda/build/libs/*.jar
          compression-level: 0

  build_macos:
    name: MacOS build
    runs-on: macos-15

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install coreutils
        run: brew install coreutils
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build native lib
        run: ./gradlew buildNativeProject
        env:
          PM_PYTHON_EXT: python3
      - name: Build and test JNI bindings
        run: ./gradlew build

      - name: Upload MacOS lib artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-libs
          path: |
            physx-jni/build/libs/*.jar
            physx-jni-natives-macos/build/libs/*.jar
            physx-jni-natives-macos-arm64/build/libs/*.jar
          compression-level: 0
